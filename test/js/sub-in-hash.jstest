const $XRegExp = require('xregexp');
require('../lib/plugins/monkey-patch.js');
(() => {
  let $x;
  $x = {
    "a": 1,
    "b": 4,
    "c": {
      "d": 5,
      "e": 3,
    },
  };
  (() => {
    let val = [(() => {
      let name = "sub";
      let op = $x;
      let processedArgs = [];
      if (typeof op[name] !== 'function') {
        return op[name];
      }
      return (...args) => op[name](...processedArgs, ...args);
    })()("a")];
    console.log(...val);
    return val;
  })();
  (() => {
    let val = [(() => {
      let name = "sub";
      let op = $x;
      let processedArgs = [];
      if (typeof op[name] !== 'function') {
        return op[name];
      }
      return (...args) => op[name](...processedArgs, ...args);
    })()("c", "d")];
    console.log(...val);
    return val;
  })();
  (() => {
    let val = [(() => {
      let name = "e";
      let op = (() => {
        let name = "sub";
        let op = $x;
        let processedArgs = [];
        if (typeof op[name] !== 'function') {
          return op[name];
        }
        return (...args) => op[name](...processedArgs, ...args);
      })()("c");
      let processedArgs = [];
      if (typeof op[name] !== 'function') {
        return op[name];
      }
      return (...args) => op[name](...processedArgs, ...args);
    })()];
    console.log(...val);
    return val;
  })();
  return (() => {
    let val = [(() => {
      let name = "sub";
      let op = $x;
      let processedArgs = [];
      if (typeof op[name] !== 'function') {
        return op[name];
      }
      return (...args) => op[name](...processedArgs, ...args);
    })()("b")];
    console.log(...val);
    return val;
  })();
})()
